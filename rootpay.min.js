!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.RootPay=t():e.RootPay=t()}(this,(()=>{return e={316:e=>{!function(t){"use strict";const o={};let n={token:null,apiBaseUrl:"https://api.root.credit",debug:!1,fields:{},formState:{isValid:!1,isFocused:!1,isEmpty:!0,fields:{}},payee_id:null,callbacks:{},paymentMethods:[]};const a={},r=function(){n.debug},i=function(){n.debug},s=function(){n.debug};function d(e,t){const o=n.fields[e];return!(!o||!o.iframe||(t.style&&(o.config.style={...o.config.style,...t.style}),void 0!==t.placeholder&&(o.config.placeholder=t.placeholder),o.iframe.contentWindow.postMessage({action:"UPDATE_FIELD",fieldId:e,config:{style:o.config.style,placeholder:o.config.placeholder}},"*"),0))}function l(e,t){const o=document.querySelector(e);if(!o)throw new Error(`RootPay: Container element not found: ${e}`);const a=`secure-field-${f()}`,r={type:"text",name:a,placeholder:"",style:{},onValidChange:null,...t};t.type&&(r.name=t.type);const i={id:a,name:r.name,type:r.type,isValid:!1,isEmpty:!0,isFocused:!1,errors:[],value:""};n.fields[a]={config:r,element:o,iframe:null,state:i,isReady:!1};const s=r.type||r.name;return n.formState.fields[s]=i,p(),function(e,t,o){const a=document.createElement("iframe");a.id=t,a.name=t,a.setAttribute("frameborder","0"),a.setAttribute("scrolling","no"),a.setAttribute("allowtransparency","true"),a.style.width="100%",a.style.height="100%",a.style.border="none",a.style.outline="none",a.style.overflow="hidden",a.style.backgroundColor="transparent";let r=`${n.apiBaseUrl}/collect/secure-field?field_id=${encodeURIComponent(t)}&field_type=${encodeURIComponent(o.type)}`;o.placeholder&&(r+=`&placeholder=${encodeURIComponent(o.placeholder)}`),r+="&show_label=false",r+="&input_border=none",r+="&input_border_radius=0px",r+="&input_padding=0 12px",r+="&font_size=16px",r+="&input_background=transparent",r+="&input_color=#333",r+="&font_family=Arial, sans-serif",a.setAttribute("src",r),n.fields[t].iframe=a,e.appendChild(a)}(o,a,r),{id:a,update:e=>d(a,e)}}function c(e){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"card",a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};void 0===a.isDefault&&(a.isDefault=!0),r("[RootPay] Submitting payment method:",o,a),0!==Object.keys(n.fields).length?function(e){const o=Object.values(n.fields).map((e=>e.iframe)).filter(Boolean);if(0===o.length)return void e();let a=o.length;const r=function(o){const n=o.data;"FIELD_STATE_CHANGE"===n?.type&&(a--,a<=0&&(t.removeEventListener("message",r),e()))};t.addEventListener("message",r),o.forEach((e=>{try{e.contentWindow.postMessage({action:"GET_FIELD_VALUE",fieldId:e.id},"*")}catch(e){i("[RootPay] Error requesting field value:",e),a--}})),setTimeout((()=>{a>0&&(t.removeEventListener("message",r),e())}),1e3)}((()=>{!function(e,t){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=n.formState.fields;let r,i;if("card"===t){const t=a["card-number"]?.value;let s=a["card-expiry"]?.value;if(!t||!s)return void e(400,{error:"Card number and expiry are required"});r={card_number:t,card_expiry_date:s.replace("/","")},i=`/api/payees/${n.payee_id}/payment-methods/push-to-card?is_default=${!!o.isDefault}`}else{if("bank"!==t)return void e(400,{error:"Invalid payment method type"});{const t=a["account-number"]?.value,s=a["routing-number"]?.value;if(!t||!s)return void e(400,{error:"Account number and routing number are required"});r={account_number:t,routing_number:s,routing_number_type:"aba"},i=`/api/payees/${n.payee_id}/payment-methods/pay-to-bank?is_default=${!!o.isDefault}`}}u(i,r,e)}(e,o,a)})):e(400,{error:"No fields configured"})}function u(e,t,o){const r=`request-${f()}`,i=Object.values(n.fields).map((e=>e.iframe)).filter(Boolean);if(0===i.length)return void o(400,{error:"No secure fields found"});const s={action:"API_REQUEST",endpoint:e,data:t,token:n.token,requestId:r,payee_id:n.payee_id,timestamp:Date.now()},d=setTimeout((()=>{a[r]&&(delete a[r],o(408,{error:"Request timed out"}))}),15e3);a[r]={callback:o,timeoutId:d,sentAt:new Date};try{if(!i[0].contentWindow)throw new Error("Iframe contentWindow is not available");i[0].contentWindow.postMessage(s,"*")}catch(e){clearTimeout(d),delete a[r],o(500,{error:"Failed to send request: "+e.message})}}function f(){return Math.random().toString(36).substring(2,15)}function p(){let e=!0,t=!0;Object.values(n.formState.fields).forEach((o=>{o.isValid||(e=!1),o.isEmpty||(t=!1)})),n.formState.isValid=e,n.formState.isEmpty=t}function y(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e||"function"!=typeof e)return JSON.parse(JSON.stringify(n.paymentMethods));r("[RootPay] Fetching payment methods");let o="";return t.cursor&&(o+=(o?"&":"?")+`cursor=${encodeURIComponent(t.cursor)}`),u(`/api/payees/${n.payee_id}/payment-methods${o}`,{},((t,o)=>{if(201===t||200===t){const t={hasMore:null!==o.next_cursor&&void 0!==o.next_cursor,nextCursor:o.next_cursor||null};e(null,n.paymentMethods,t)}else e(o.error||"Failed to fetch payment methods",null)})),JSON.parse(JSON.stringify(n.paymentMethods))}o.init=function(e){if(!e?.token)throw new Error("RootPay: token is required");if(!e?.payee_id)throw new Error("RootPay: payee_id is required");return n.token=e.token,n.payee_id=e.payee_id,n.debug=!!e.debug,r(`[RootPay] Initializing with API base URL: ${n.apiBaseUrl}`),t.addEventListener("message",(function(e){const t=e.data;t&&"object"==typeof t&&(r("[RootPay] Received message:",t),t.requestId?function(e){if(r(`[RootPay] Processing API response: ${e.requestId}`),!a[e.requestId])return void s(`[RootPay] Received response for unknown request: ${e.requestId}`);const t=a[e.requestId];if(clearTimeout(t.timeoutId),delete a[e.requestId],e.success)r(`[RootPay] Request ${e.requestId} succeeded`),t.callback(201,e.data),n.callbacks.onSuccess(e.data);else{const o=e.error||"Unknown error",a=e.status||400,r={error:o,details:e.errorDetails||null,status:a};i("[RootPay] Error details:",r),t.callback(a,r),n.callbacks.onError(o,r)}}(t):"FIELD_STATE_CHANGE"===t.type&&t.fieldId?function(e){const t=e.fieldId;if(!n.fields[t])return;r(`[RootPay] Updating field state for ${t}`);const o=n.fields[t],a=o.state.isValid;Object.assign(o.state,e.state),void 0!==e.state.value&&(o.state.value=e.state.value,r(`[RootPay] Field ${t} value: ${e.state.value}`));const i=e.fieldType||o.config.name;n.formState.fields[i]=o.state,p(),o.config.onValidChange&&"function"==typeof o.config.onValidChange&&a!==o.state.isValid&&(r(`[RootPay] Field validation changed: ${a} â†’ ${o.state.isValid}`),o.config.onValidChange(o.state.isValid))}(t):"IFRAME_READY"===t.type&&t.fieldId?function(e){const t=e.fieldId;if(!n.fields[t])return;r(`[RootPay] Field ${t} iframe is ready`),n.fields[t].isReady=!0;const o=n.fields[t].config;o.style&&Object.keys(o.style).length>0&&d(t,{style:o.style}),o.placeholder&&d(t,{placeholder:o.placeholder})}(t):"PAYMENT_METHODS_UPDATE"===t.type&&function(e){const t=e.paymentMethods;if(!t)return void s("[RootPay] Received invalid payment methods update: missing data");let o;if(Array.isArray(t))o=t;else{if(!t.data||!Array.isArray(t.data))return void s("[RootPay] Received invalid payment methods update: not an array");o=t.data}r("[RootPay] Updating payment methods",o),n.paymentMethods=o,n.callbacks.onPaymentMethodsUpdate&&n.callbacks.onPaymentMethodsUpdate(o)}(t))})),r("[RootPay] Global message handler set up"),n.callbacks.onSuccess=e.onSuccess||function(){},n.callbacks.onError=e.onError||function(){},n.callbacks.onPaymentMethodsUpdate=e.onPaymentMethodsUpdate||function(){},{field:l,submitPaymentMethod:c,getFormState:()=>JSON.parse(JSON.stringify(n.formState)),getPaymentMethods:y}},t.RootPay=o,e.exports&&(e.exports=o)}(window)}},t={},function o(n){var a=t[n];if(void 0!==a)return a.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,o),r.exports}(316);var e,t}));